on:
  workflow_call:

jobs:
  scan_repository:
    name: "Scan Virus on Repository"
    runs-on: "ubuntu-latest"
    permissions:
      id-token: write
      contents: read
      issues: write
      discussions: write
      pull-requests: write
    steps:
      - name: "Checkout Repository"
        uses: "actions/checkout@v3.5.0"
        with:
          fetch-depth: 0
      - run: mkdir -p output
      - name: Login to JFrog Artifactory Container Registry
        uses: docker/login-action@v3
        with:
          registry: hpeartifacts-glcp-images.jfrog.io
          username: ${{ secrets.HPE_ARTIFACTORY_BBOB_USERNAME }}
          password: ${{ secrets.HPE_ARTIFACTORY_BBOB_API_KEY }}
      - name: "Scan Source for Viruses"
        id: scan
        run: |
          SHA_SHORT=$(git rev-parse --short HEAD)
          SCAN_OUTPUT=/tmp/clamav-repository-results-${{ github.event.repository.name }}-${SHA_SHORT}-$(date +%s).txt
          #echo "scan_output=${SCAN_OUTPUT}" >> output/results.txt
          #echo "Scan Output" >> output/results.txt
          docker run --rm -v ${{ github.workspace }}:/scandir -v /tmp:/tmp -e SCAN_OUTPUT=${SCAN_OUTPUT} hpeartifacts-glcp-images.jfrog.io/clamav:latest clamscan --infected --recursive --max-files=0 --max-filesize=0 --max-scansize=0 --max-recursion=1000 --max-dir-recursion=1000 /scandir | tee -a $SCAN_OUTPUT
          cat ${SCAN_OUTPUT} >> output/results.txt
      - uses: actions/upload-artifact@v1
        with:
          name: results
          path: output
      - uses: actions/download-artifact@v1
        with:
          name: results
          
      # - name: comment PR
      #   if: always()
      #   uses: glcp/pr-comment@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     path: results/results.txt

      - name: Comment PR with execution number
        if: always() && github.event_name == 'pull_request'
        uses: glcp/actions-comment-pull-request@v2
        with:
          filePath: results/results.txt
          comment_tag: Malware Scan
          
      - name: exit-scan
        id: check-result
        run: |
          INFECTED_FILES=$(grep ^Infected results/results.txt | awk '{print $NF}')
          exit $INFECTED_FILES
