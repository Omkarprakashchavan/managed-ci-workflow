name: Build Github Pages

on:
  push:
    tags:
      - 'v[1-9]+.[0-9]+.[0-9]+'
    # Change the regex above accordingly and also the regex used
    # in the "grep" command below

jobs:
  pages:
    name: Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update conf.py with highest version number
        run: |
          #-# start #-# DO NOT REMOVE OR MODIFY THIS LINE
          # the cmds below are also used by local-build.sh script
          echo ////////////////////
          lt=$(git tag -l | grep '^v[0-9]\+\.[0-9]\+\.[0-9]\+' | sort -V | tail -1)
          # lt --> latest tag (highest version number)
          # conf.py does NOT need to be committed/pushed
          sed -E -i "s/^(smv_latest_version).*=.*/\1 = r'$lt'/g" docs-creation/conf.py
          echo ///// smv_latest_version in conf.py /////////
          grep smv_latest_version docs-creation/conf.py
          echo ////////////////////
          echo "Updated 'docs-creation/conf.py' file with latest tag=$lt"
          echo ////////////////////
          #-# end #-# DO NOT REMOVE OR MODIFY THIS LINE

      - name: Install Python dependencies
        run: |
          pip3 install -r docs-creation/requirements.txt

      - name: Make html pages
        run: |
          cd docs-creation
          sphinx-multiversion .. _build/html/versions -c . -D version=''

      - uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages
      - run: |
          echo "> copy '_build' dir to 'gh-pages' dir"
          cd gh-pages
          cp ../docs-creation/_static/index.html .  # file generated by sphinx-multiversion cmd
          top_dir="versions"  # this directory name is referenced in the index.html
          test ! -d $top_dir && mkdir $top_dir
          rsync -a --exclude '.*' ../docs-creation/_build/html/$top_dir/ $top_dir
          touch .nojekyll
          echo "> running: git branch -a"
          git branch -a
          echo "> running: git status"
          git status
          git config user.name glcp.bot
          git config user.email glcp.bot@hpe.com
          git add .
          git commit -m "Github pages generated by glcp bot"
          git push
